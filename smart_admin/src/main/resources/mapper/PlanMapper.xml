<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.smart_admin.mapper.PlanMapper" >
  <resultMap id="BaseResultMap" type="com.example.smart_admin.domain.Plan" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="plan_code" property="planCode" jdbcType="VARCHAR" />
    <result column="plan_time" property="planTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="yield" property="yield" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.smart_admin.domain.Plan" extends="BaseResultMap" >
    <result column="data" property="data" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, plan_code, plan_time, create_time, yield
  </sql>
  <sql id="Blob_Column_List" >
    data
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from plan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from plan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.smart_admin.domain.Plan" >
    insert into plan (id, plan_code, plan_time, 
      create_time, yield, data
      )
    values (#{id,jdbcType=INTEGER}, #{planCode,jdbcType=VARCHAR}, #{planTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{yield,jdbcType=VARCHAR}, #{data,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.smart_admin.domain.Plan" >
    insert into plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="planCode != null" >
        plan_code,
      </if>
      <if test="planTime != null" >
        plan_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="yield != null" >
        yield,
      </if>
      <if test="data != null" >
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="planCode != null" >
        #{planCode,jdbcType=VARCHAR},
      </if>
      <if test="planTime != null" >
        #{planTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="yield != null" >
        #{yield,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.smart_admin.domain.Plan" >
    update plan
    <set >
      <if test="planCode != null" >
        plan_code = #{planCode,jdbcType=VARCHAR},
      </if>
      <if test="planTime != null" >
        plan_time = #{planTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="yield != null" >
        yield = #{yield,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.smart_admin.domain.Plan" >
    update plan
    set plan_code = #{planCode,jdbcType=VARCHAR},
      plan_time = #{planTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      yield = #{yield,jdbcType=VARCHAR},
      data = #{data,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.smart_admin.domain.Plan" >
    update plan
    set plan_code = #{planCode,jdbcType=VARCHAR},
      plan_time = #{planTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      yield = #{yield,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>